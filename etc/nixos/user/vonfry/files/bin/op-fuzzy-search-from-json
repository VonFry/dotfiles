#!/usr/bin/env ruby

require 'json'
# TODO test the op new searching feature, and if it can work expected, remove
# this file

begin
  items = `op list items`
  op = JSON.parse items
rescue
  abort 'JSON parse failed. The reason may be caused without signing.'
end

input = ARGV * '.*'

iregex = /.*#{input}.*/

searched = op.select do |obj|
  overview = obj['overview']

  title = iregex.match? overview['title']

  tags = overview.fetch('tags', []).any? do |tag|
    ARGV.any? tag
  end

  url = iregex.match? overview['url']

  if obj['URLs']
    url = obj.fetch('URLs', []).any? do |obj|
      iregex.match? obj['overview']['url']
    end
  else
    urls = false
  end

  title || tags || url || urls
end

searched.each_index do |idx|
  puts "index: #{idx}"
  obj = searched[idx]
  overview = obj['overview']
  puts "uuid:  #{obj['uuid']}"
  puts "title: #{overview['title']}"
  puts "tags:  #{overview.fetch('tags', []).join ' '}"
  puts "ainfo: #{overview['ainfo']}"
  puts "url:   #{overview['url']}"
  if obj['URLs']
    puts 'urls:'
    obj['URLs'].map do |url|
      url.values.map do |u|
        puts "       #{u}"
      end
    end
  end
  puts ''
end

if searched.length == 1
  idx = 0
else
  printf "input an index or nothing: "
  idx = STDIN.gets.to_i
end

if searched[idx]
  puts `op-get-password-from-json #{searched[idx]['uuid']}`
end
