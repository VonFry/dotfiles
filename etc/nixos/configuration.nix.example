{ config, pkgs, lib, ... }:

{
  imports =  [
    ./hardware-configuration.nix # use `nixos-generate-config`
    ./modules
  ];

  # vonfry = {
  #   enable = true;
  #   user.extraConfig = {
  #     openssh.authorizedKeys.keys = [];
  #   };
  #
  #   syncthing.devices = {
  #     laptop = {
  #       id = "";
  #       introducer = true;
  #     };
  #   };
  #
  #   hmConfig =
  #     { config, pkgs, lib, ... }:
  #     
  #     {
  #       # sessionVariables must be set after creating these directories.
  #       home.sessionVariables = {
  #         DOTFILES_DIR = "$HOME/dotfiles";
  #         CLOUD_DIR    = "$HOME/cloud";
  #         ORG_DIR      = "$HOME/orgmode";
  #         CLONE_LIB    = "$HOME/repos";
  #         PASSWD_DIR   = "$HOME/.local/passwd";
  #         LEDGER_FILE  = "$HOME/financial/$(date +%Y).journal";
  #       };
  #       
  #       vonfry = {
  #         development = {
  #           git.signKey = "";
  #         };
  #  
  #         net = {
  #           email = import ./local/mail.nix;
  #         };
  #       };
  #     };
  # };

  # fonts.fontconfig.dpi = 96;

  # default nrBuildUsers is same as maxJobs or 32. You may set this variables
  # if your number of cpu threads is larger than 32.
  # nix.maxJobs = "auto"; 

  # systemd.services.nix-daemon.environment = {
  #   http_proxy  = "prot://user:password@proxy:port";
  #   https_proxy = "prot://user:password@proxy:port";
  #   ftp_proxy   = "prot://user:password@proxy:port";
  # };

  # services.openssh.enable = true;

  # boot.supportedFilesystems = [ "ntfs" ];

  # networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # nesting.clone = [];

  # networking.firewall = {
  #     allowedTCPPorts = [ ];
  #     allowedTCPPortRanges = [];
  #     allowedUDPPorts = [ ];
  # };

  # networking.hosts = {
  # };

  # environment.systemPackages = with pkgs; [ krb5 heimdal ];
  # krb5 = {
  #   enable = true;
  #   realms = {
  #     "<realm>" = {
  #       admin_server = "<host>";
  #   kdc = "<host>";
  #     };
  #   };
  #   libdefaults = {
  #     default_realm = "<realm>";
  #   };
  #   extraConfig =
  #     ''
  #     [logging]
  #     kdc = FILE:/var/log/krb5kdc.log
  #     admin_server = FILE:/var/log/kadmin.log
  #     default = FILE:/var/log/krb5lib.log
  #     '';
  # };

  # services.nfs.server = {
  #   enable = true;
  #   exports =
  #     ''
  #     / 10.0.0.0/8(rw,fsid=0,sec=krb5p,no_subtree_check,insecure)
  #     /home/vonfry 10.0.0.0/8(rw,sec=krb5p,no_subtree_check,insecure)
  #     '';
  # };

  # services.fprintd.enable = false;

  # N.B. boot loader

  # N.B. network
}
